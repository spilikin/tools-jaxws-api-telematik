plugins {
    id 'java-library'
}

repositories {
    jcenter()
}

project.ext {
    cxfVersion = "3.3.6"
    cxfToolArtifacts = [
        'cxf-tools-wsdlto-frontend-jaxws',
        'cxf-tools-wsdlto-databinding-jaxb',
        'cxf-tools-common',
        'cxf-tools-wsdlto-core'
    ]

    wsArtifacts = [
        "jakarta.xml.bind:jakarta.xml.bind-api:2.3.3",
        "jakarta.jws:jakarta.jws-api:2.1.0",
        "jakarta.xml.ws:jakarta.xml.ws-api:2.3.3",
        "javax.annotation:javax.annotation-api:1.3.2"
    ]

    generatedSourcesDir = file("$buildDir/generated/jaxws/java")
    generatedResourcesDir = file("$buildDir/generated/jaxws/resources")

    wsdlBaseDir = file("src/main/wsdl/ptv3")

    wsdlList = [
        'api-telematik/conn/nfds/DPEService.wsdl',
        'api-telematik/conn/nfds/NFDService.wsdl',
        'api-telematik/conn/CardTerminalService.wsdl',
        'api-telematik/conn/vsds/VSDService.wsdl',
        'api-telematik/conn/vsds/KvkService.wsdl',
        'api-telematik/conn/EventService.wsdl',
        'api-telematik/conn/EncryptionService.wsdl',
        'api-telematik/conn/SignatureService.wsdl',
        'api-telematik/conn/CardService.wsdl',
        'api-telematik/conn/CertificateService.wsdl',
        'api-telematik/conn/amtss/AMTSService.wsdl',
        'api-telematik/conn/AuthSignatureService.wsdl',
        'ServiceDirectory.helper.wsdl'
    ]

}

// New configuration for CXF dependencies.
configurations { cxfTool }

sourceSets {
  main {
    java.srcDirs += generatedSourcesDir
    resources.srcDirs += generatedResourcesDir
  }
}
dependencies {
   cxfToolArtifacts.each { artifact ->
        cxfTool "org.apache.cxf:$artifact:$cxfVersion"
    }

    wsArtifacts.each { artifact ->
        cxfTool "$artifact"
        api "$artifact"
    }

}

wsdlList.each { wsdl -> 
    tasks.create(name: "wsdl"+wsdl.replace('/', '_'), type: JavaExec) { 
        outputs.upToDateWhen { false }
        outputs.dir generatedSourcesDir
        systemProperties = [
            'javax.xml.accessExternalDTD': 'all'
        ]
        main = 'org.apache.cxf.tools.wsdlto.WSDLToJava'
        classpath = configurations.cxfTool
        args '-d', generatedSourcesDir
        args '-verbose'
        args '-validate'
        args '-wsdlLocation', "classpath:META-INF/wsdl/$wsdl"
        args "$wsdlBaseDir/$wsdl"

        doLast {
            println "[INFO] jax-ws files generated: $generatedSourcesDir"
        }
    } 
    compileJava.dependsOn("wsdl"+wsdl.replace('/', '_'))

} 

task cleanUpGenerated {
    doLast {
        delete "$generatedSourcesDir/helper/"
    }
}
compileJava.dependsOn(cleanUpGenerated)

task copyResources(type: Copy) {
    from (wsdlBaseDir) {
        exclude "*.helper.wsdl"
        exclude "**/*.md"
        exclude "**/*.adoc"
    }
    into file("$generatedResourcesDir/META-INF/wsdl")
}
compileJava.dependsOn(copyResources)
